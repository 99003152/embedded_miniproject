
driverlayer_GPIO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005a8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000750  08000758  00010758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000750  08000750  00010758  2**0
                  CONTENTS
  4 .ARM          00000000  08000750  08000750  00010758  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000750  08000758  00010758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000750  08000750  00010750  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000754  08000754  00010754  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000758  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000758  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010758  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000755  00000000  00000000  00010788  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001e5  00000000  00000000  00010edd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  000110c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00011170  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000012d9  00000000  00000000  000111f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000009fe  00000000  00000000  000124c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00004eb8  00000000  00000000  00012ec7  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00017d7f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  00017dfc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000738 	.word	0x08000738

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000738 	.word	0x08000738

080001e8 <delay>:

#include "STM32F4xx.h"
#include <stdint.h>

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i<500000; i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	0007a11f 	.word	0x0007a11f

08000214 <main>:

int main()
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
GPIO_handle_t GPIOLED;
GPIOLED.pGPIOx = GPIOD;
 800021a:	4b19      	ldr	r3, [pc, #100]	; (8000280 <main+0x6c>)
 800021c:	60fb      	str	r3, [r7, #12]
GPIOLED.pin_config.GPIO_PinNumber = GPIO_Pin_Number_12;
 800021e:	230c      	movs	r3, #12
 8000220:	743b      	strb	r3, [r7, #16]
GPIOLED.pin_config.GPIO_PinMode = GPIO_Mode_out;
 8000222:	2301      	movs	r3, #1
 8000224:	747b      	strb	r3, [r7, #17]
GPIOLED.pin_config.GPIO_PinSpeed = GPIO_SpeedControl_high;
 8000226:	2302      	movs	r3, #2
 8000228:	74bb      	strb	r3, [r7, #18]
GPIOLED.pin_config.GPIO_PinOType = GPIO_OType_pushpull;
 800022a:	2300      	movs	r3, #0
 800022c:	753b      	strb	r3, [r7, #20]
GPIOLED.pin_config.GPIO_PinPuPdControl = GPIO_PuPdControl_up;
 800022e:	2301      	movs	r3, #1
 8000230:	74fb      	strb	r3, [r7, #19]
GPIO_PeriClockControl(GPIOD, ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4812      	ldr	r0, [pc, #72]	; (8000280 <main+0x6c>)
 8000236:	f000 f851 	bl	80002dc <GPIO_PeriClockControl>
GPIO_Init(&GPIOLED);
 800023a:	f107 030c 	add.w	r3, r7, #12
 800023e:	4618      	mov	r0, r3
 8000240:	f000 f96c 	bl	800051c <GPIO_Init>

GPIO_handle_t GPIO_button;
GPIO_button.pGPIOx = GPIOA;
 8000244:	4b0f      	ldr	r3, [pc, #60]	; (8000284 <main+0x70>)
 8000246:	603b      	str	r3, [r7, #0]
GPIO_button.pin_config.GPIO_PinNumber = GPIO_Pin_Number_0;
 8000248:	2300      	movs	r3, #0
 800024a:	713b      	strb	r3, [r7, #4]
GPIO_button.pin_config.GPIO_PinMode = GPIO_Mode_in;
 800024c:	2300      	movs	r3, #0
 800024e:	717b      	strb	r3, [r7, #5]
GPIO_button.pin_config.GPIO_PinSpeed = GPIO_SpeedControl_high;
 8000250:	2302      	movs	r3, #2
 8000252:	71bb      	strb	r3, [r7, #6]
//GPIO_button.pin_config.GPIO_PinPuPdControl = GPIO_PuPdControl_nothing;
GPIO_PeriClockControl(GPIOA, ENABLE);
 8000254:	2101      	movs	r1, #1
 8000256:	480b      	ldr	r0, [pc, #44]	; (8000284 <main+0x70>)
 8000258:	f000 f840 	bl	80002dc <GPIO_PeriClockControl>
GPIO_Init(&GPIO_button);
 800025c:	463b      	mov	r3, r7
 800025e:	4618      	mov	r0, r3
 8000260:	f000 f95c 	bl	800051c <GPIO_Init>

while(1)
{
	if((GPIO_ReadFromInputPin((Reg_def_t*)GPIOA_BASEADDR,GPIO_Pin_Number_0) == ENABLE))
 8000264:	2100      	movs	r1, #0
 8000266:	4807      	ldr	r0, [pc, #28]	; (8000284 <main+0x70>)
 8000268:	f000 fa19 	bl	800069e <GPIO_ReadFromInputPin>
 800026c:	4603      	mov	r3, r0
 800026e:	2b01      	cmp	r3, #1
 8000270:	d1f8      	bne.n	8000264 <main+0x50>
	{
		//GPIO_Init(&GPIOLED);
	    GPIO_ToggleOutputPin((Reg_def_t*)GPIOD_BASEADDR, GPIO_Pin_Number_12);
 8000272:	210c      	movs	r1, #12
 8000274:	4802      	ldr	r0, [pc, #8]	; (8000280 <main+0x6c>)
 8000276:	f000 fa25 	bl	80006c4 <GPIO_ToggleOutputPin>
	    delay();
 800027a:	f7ff ffb5 	bl	80001e8 <delay>
	if((GPIO_ReadFromInputPin((Reg_def_t*)GPIOA_BASEADDR,GPIO_Pin_Number_0) == ENABLE))
 800027e:	e7f1      	b.n	8000264 <main+0x50>
 8000280:	40020c00 	.word	0x40020c00
 8000284:	40020000 	.word	0x40020000

08000288 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000288:	480d      	ldr	r0, [pc, #52]	; (80002c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800028a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800028c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000290:	480c      	ldr	r0, [pc, #48]	; (80002c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000292:	490d      	ldr	r1, [pc, #52]	; (80002c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000294:	4a0d      	ldr	r2, [pc, #52]	; (80002cc <LoopForever+0xe>)
  movs r3, #0
 8000296:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000298:	e002      	b.n	80002a0 <LoopCopyDataInit>

0800029a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800029c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800029e:	3304      	adds	r3, #4

080002a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a4:	d3f9      	bcc.n	800029a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002a6:	4a0a      	ldr	r2, [pc, #40]	; (80002d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002a8:	4c0a      	ldr	r4, [pc, #40]	; (80002d4 <LoopForever+0x16>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002ac:	e001      	b.n	80002b2 <LoopFillZerobss>

080002ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b0:	3204      	adds	r2, #4

080002b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b4:	d3fb      	bcc.n	80002ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002b6:	f000 fa1b 	bl	80006f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ba:	f7ff ffab 	bl	8000214 <main>

080002be <LoopForever>:

LoopForever:
    b LoopForever
 80002be:	e7fe      	b.n	80002be <LoopForever>
  ldr   r0, =_estack
 80002c0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002c8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002cc:	08000758 	.word	0x08000758
  ldr r2, =_sbss
 80002d0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d4:	2000001c 	.word	0x2000001c

080002d8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002d8:	e7fe      	b.n	80002d8 <ADC_IRQHandler>
	...

080002dc <GPIO_PeriClockControl>:
 */

#include "STM32Fxx_GPIO_driver.h"
//driver API's
void GPIO_PeriClockControl(Reg_def_t *pGPIO, uint8_t EnorDi)
{
 80002dc:	b480      	push	{r7}
 80002de:	b083      	sub	sp, #12
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	6078      	str	r0, [r7, #4]
 80002e4:	460b      	mov	r3, r1
 80002e6:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 80002e8:	78fb      	ldrb	r3, [r7, #3]
 80002ea:	2b01      	cmp	r3, #1
 80002ec:	d163      	bne.n	80003b6 <GPIO_PeriClockControl+0xda>
	{
	    if (pGPIO == GPIOA)
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4a80      	ldr	r2, [pc, #512]	; (80004f4 <GPIO_PeriClockControl+0x218>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d106      	bne.n	8000304 <GPIO_PeriClockControl+0x28>
	    {
			GPIOA_PCLOCK_EN();
 80002f6:	4b80      	ldr	r3, [pc, #512]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80002f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fa:	4a7f      	ldr	r2, [pc, #508]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80002fc:	f043 0301 	orr.w	r3, r3, #1
 8000300:	6313      	str	r3, [r2, #48]	; 0x30
					GPIOI_PCLOCK_DI();
				}
	}


}
 8000302:	e0f0      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if (pGPIO == GPIOB)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a7d      	ldr	r2, [pc, #500]	; (80004fc <GPIO_PeriClockControl+0x220>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d106      	bne.n	800031a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLOCK_EN();
 800030c:	4b7a      	ldr	r3, [pc, #488]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800030e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000310:	4a79      	ldr	r2, [pc, #484]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000312:	f043 0302 	orr.w	r3, r3, #2
 8000316:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000318:	e0e5      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if(pGPIO == GPIOC)
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4a78      	ldr	r2, [pc, #480]	; (8000500 <GPIO_PeriClockControl+0x224>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d106      	bne.n	8000330 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLOCK_EN();
 8000322:	4b75      	ldr	r3, [pc, #468]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000326:	4a74      	ldr	r2, [pc, #464]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000328:	f043 0304 	orr.w	r3, r3, #4
 800032c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032e:	e0da      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if (pGPIO == GPIOD)
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a74      	ldr	r2, [pc, #464]	; (8000504 <GPIO_PeriClockControl+0x228>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d106      	bne.n	8000346 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLOCK_EN();
 8000338:	4b6f      	ldr	r3, [pc, #444]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800033a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033c:	4a6e      	ldr	r2, [pc, #440]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800033e:	f043 0308 	orr.w	r3, r3, #8
 8000342:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000344:	e0cf      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if (pGPIO == GPIOE)
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4a6f      	ldr	r2, [pc, #444]	; (8000508 <GPIO_PeriClockControl+0x22c>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d106      	bne.n	800035c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLOCK_EN();
 800034e:	4b6a      	ldr	r3, [pc, #424]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000352:	4a69      	ldr	r2, [pc, #420]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000354:	f043 0310 	orr.w	r3, r3, #16
 8000358:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035a:	e0c4      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if (pGPIO == GPIOF)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a6b      	ldr	r2, [pc, #428]	; (800050c <GPIO_PeriClockControl+0x230>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d106      	bne.n	8000372 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLOCK_EN();
 8000364:	4b64      	ldr	r3, [pc, #400]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000368:	4a63      	ldr	r2, [pc, #396]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800036a:	f043 0320 	orr.w	r3, r3, #32
 800036e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000370:	e0b9      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if(pGPIO == GPIOG)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a66      	ldr	r2, [pc, #408]	; (8000510 <GPIO_PeriClockControl+0x234>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d106      	bne.n	8000388 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLOCK_EN();
 800037a:	4b5f      	ldr	r3, [pc, #380]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800037c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037e:	4a5e      	ldr	r2, [pc, #376]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000380:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000384:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000386:	e0ae      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if (pGPIO == GPIOH)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4a62      	ldr	r2, [pc, #392]	; (8000514 <GPIO_PeriClockControl+0x238>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d106      	bne.n	800039e <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLOCK_EN();
 8000390:	4b59      	ldr	r3, [pc, #356]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000392:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000394:	4a58      	ldr	r2, [pc, #352]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000396:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800039a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039c:	e0a3      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		else if (pGPIO == GPIOI)
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4a5d      	ldr	r2, [pc, #372]	; (8000518 <GPIO_PeriClockControl+0x23c>)
 80003a2:	4293      	cmp	r3, r2
 80003a4:	f040 809f 	bne.w	80004e6 <GPIO_PeriClockControl+0x20a>
			GPIOI_PCLOCK_EN();
 80003a8:	4b53      	ldr	r3, [pc, #332]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ac:	4a52      	ldr	r2, [pc, #328]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b4:	e097      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
		        if (pGPIO == GPIOA)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a4e      	ldr	r2, [pc, #312]	; (80004f4 <GPIO_PeriClockControl+0x218>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d10c      	bne.n	80003d8 <GPIO_PeriClockControl+0xfc>
					GPIOA_PCLOCK_DI();
 80003be:	4b4e      	ldr	r3, [pc, #312]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003c0:	691b      	ldr	r3, [r3, #16]
 80003c2:	4a4d      	ldr	r2, [pc, #308]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003c4:	f043 0301 	orr.w	r3, r3, #1
 80003c8:	6113      	str	r3, [r2, #16]
 80003ca:	4b4b      	ldr	r3, [pc, #300]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003cc:	691b      	ldr	r3, [r3, #16]
 80003ce:	4a4a      	ldr	r2, [pc, #296]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003d0:	f023 0301 	bic.w	r3, r3, #1
 80003d4:	6113      	str	r3, [r2, #16]
}
 80003d6:	e086      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if (pGPIO == GPIOB)
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a48      	ldr	r2, [pc, #288]	; (80004fc <GPIO_PeriClockControl+0x220>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d10c      	bne.n	80003fa <GPIO_PeriClockControl+0x11e>
					GPIOB_PCLOCK_DI();
 80003e0:	4b45      	ldr	r3, [pc, #276]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003e2:	691b      	ldr	r3, [r3, #16]
 80003e4:	4a44      	ldr	r2, [pc, #272]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003e6:	f043 0302 	orr.w	r3, r3, #2
 80003ea:	6113      	str	r3, [r2, #16]
 80003ec:	4b42      	ldr	r3, [pc, #264]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003ee:	691b      	ldr	r3, [r3, #16]
 80003f0:	4a41      	ldr	r2, [pc, #260]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80003f2:	f023 0302 	bic.w	r3, r3, #2
 80003f6:	6113      	str	r3, [r2, #16]
}
 80003f8:	e075      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if(pGPIO == GPIOC)
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a40      	ldr	r2, [pc, #256]	; (8000500 <GPIO_PeriClockControl+0x224>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d10c      	bne.n	800041c <GPIO_PeriClockControl+0x140>
					GPIOC_PCLOCK_DI();
 8000402:	4b3d      	ldr	r3, [pc, #244]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000404:	691b      	ldr	r3, [r3, #16]
 8000406:	4a3c      	ldr	r2, [pc, #240]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000408:	f043 0304 	orr.w	r3, r3, #4
 800040c:	6113      	str	r3, [r2, #16]
 800040e:	4b3a      	ldr	r3, [pc, #232]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000410:	691b      	ldr	r3, [r3, #16]
 8000412:	4a39      	ldr	r2, [pc, #228]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000414:	f023 0304 	bic.w	r3, r3, #4
 8000418:	6113      	str	r3, [r2, #16]
}
 800041a:	e064      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if (pGPIO == GPIOD)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a39      	ldr	r2, [pc, #228]	; (8000504 <GPIO_PeriClockControl+0x228>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d10c      	bne.n	800043e <GPIO_PeriClockControl+0x162>
					GPIOD_PCLOCK_DI();
 8000424:	4b34      	ldr	r3, [pc, #208]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000426:	691b      	ldr	r3, [r3, #16]
 8000428:	4a33      	ldr	r2, [pc, #204]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800042a:	f043 0308 	orr.w	r3, r3, #8
 800042e:	6113      	str	r3, [r2, #16]
 8000430:	4b31      	ldr	r3, [pc, #196]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000432:	691b      	ldr	r3, [r3, #16]
 8000434:	4a30      	ldr	r2, [pc, #192]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000436:	f023 0308 	bic.w	r3, r3, #8
 800043a:	6113      	str	r3, [r2, #16]
}
 800043c:	e053      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if (pGPIO == GPIOE)
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4a31      	ldr	r2, [pc, #196]	; (8000508 <GPIO_PeriClockControl+0x22c>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d10c      	bne.n	8000460 <GPIO_PeriClockControl+0x184>
					GPIOE_PCLOCK_DI();
 8000446:	4b2c      	ldr	r3, [pc, #176]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000448:	691b      	ldr	r3, [r3, #16]
 800044a:	4a2b      	ldr	r2, [pc, #172]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800044c:	f043 0310 	orr.w	r3, r3, #16
 8000450:	6113      	str	r3, [r2, #16]
 8000452:	4b29      	ldr	r3, [pc, #164]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000454:	691b      	ldr	r3, [r3, #16]
 8000456:	4a28      	ldr	r2, [pc, #160]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000458:	f023 0310 	bic.w	r3, r3, #16
 800045c:	6113      	str	r3, [r2, #16]
}
 800045e:	e042      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if (pGPIO == GPIOF)
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	4a2a      	ldr	r2, [pc, #168]	; (800050c <GPIO_PeriClockControl+0x230>)
 8000464:	4293      	cmp	r3, r2
 8000466:	d10c      	bne.n	8000482 <GPIO_PeriClockControl+0x1a6>
					GPIOF_PCLOCK_DI();
 8000468:	4b23      	ldr	r3, [pc, #140]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800046a:	691b      	ldr	r3, [r3, #16]
 800046c:	4a22      	ldr	r2, [pc, #136]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800046e:	f043 0320 	orr.w	r3, r3, #32
 8000472:	6113      	str	r3, [r2, #16]
 8000474:	4b20      	ldr	r3, [pc, #128]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000476:	691b      	ldr	r3, [r3, #16]
 8000478:	4a1f      	ldr	r2, [pc, #124]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800047a:	f023 0320 	bic.w	r3, r3, #32
 800047e:	6113      	str	r3, [r2, #16]
}
 8000480:	e031      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if(pGPIO == GPIOG)
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	4a22      	ldr	r2, [pc, #136]	; (8000510 <GPIO_PeriClockControl+0x234>)
 8000486:	4293      	cmp	r3, r2
 8000488:	d10c      	bne.n	80004a4 <GPIO_PeriClockControl+0x1c8>
					GPIOG_PCLOCK_DI();
 800048a:	4b1b      	ldr	r3, [pc, #108]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800048c:	691b      	ldr	r3, [r3, #16]
 800048e:	4a1a      	ldr	r2, [pc, #104]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000490:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000494:	6113      	str	r3, [r2, #16]
 8000496:	4b18      	ldr	r3, [pc, #96]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 8000498:	691b      	ldr	r3, [r3, #16]
 800049a:	4a17      	ldr	r2, [pc, #92]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 800049c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80004a0:	6113      	str	r3, [r2, #16]
}
 80004a2:	e020      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if (pGPIO == GPIOH)
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	4a1b      	ldr	r2, [pc, #108]	; (8000514 <GPIO_PeriClockControl+0x238>)
 80004a8:	4293      	cmp	r3, r2
 80004aa:	d10c      	bne.n	80004c6 <GPIO_PeriClockControl+0x1ea>
					GPIOH_PCLOCK_DI();
 80004ac:	4b12      	ldr	r3, [pc, #72]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004ae:	691b      	ldr	r3, [r3, #16]
 80004b0:	4a11      	ldr	r2, [pc, #68]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80004b6:	6113      	str	r3, [r2, #16]
 80004b8:	4b0f      	ldr	r3, [pc, #60]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004ba:	691b      	ldr	r3, [r3, #16]
 80004bc:	4a0e      	ldr	r2, [pc, #56]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004be:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004c2:	6113      	str	r3, [r2, #16]
}
 80004c4:	e00f      	b.n	80004e6 <GPIO_PeriClockControl+0x20a>
				else if (pGPIO == GPIOI)
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	4a13      	ldr	r2, [pc, #76]	; (8000518 <GPIO_PeriClockControl+0x23c>)
 80004ca:	4293      	cmp	r3, r2
 80004cc:	d10b      	bne.n	80004e6 <GPIO_PeriClockControl+0x20a>
					GPIOI_PCLOCK_DI();
 80004ce:	4b0a      	ldr	r3, [pc, #40]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004d0:	691b      	ldr	r3, [r3, #16]
 80004d2:	4a09      	ldr	r2, [pc, #36]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80004d8:	6113      	str	r3, [r2, #16]
 80004da:	4b07      	ldr	r3, [pc, #28]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004dc:	691b      	ldr	r3, [r3, #16]
 80004de:	4a06      	ldr	r2, [pc, #24]	; (80004f8 <GPIO_PeriClockControl+0x21c>)
 80004e0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004e4:	6113      	str	r3, [r2, #16]
}
 80004e6:	bf00      	nop
 80004e8:	370c      	adds	r7, #12
 80004ea:	46bd      	mov	sp, r7
 80004ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop
 80004f4:	40020000 	.word	0x40020000
 80004f8:	40023800 	.word	0x40023800
 80004fc:	40020400 	.word	0x40020400
 8000500:	40020800 	.word	0x40020800
 8000504:	40020c00 	.word	0x40020c00
 8000508:	40021000 	.word	0x40021000
 800050c:	40021400 	.word	0x40021400
 8000510:	40021800 	.word	0x40021800
 8000514:	40021c00 	.word	0x40021c00
 8000518:	40022000 	.word	0x40022000

0800051c <GPIO_Init>:

//init and deinit
void GPIO_Init(GPIO_handle_t *pGPIOHandle){
 800051c:	b480      	push	{r7}
 800051e:	b087      	sub	sp, #28
 8000520:	af00      	add	r7, sp, #0
 8000522:	6078      	str	r0, [r7, #4]
	//configuring the mode
	    uint32_t temp=0;
 8000524:	2300      	movs	r3, #0
 8000526:	617b      	str	r3, [r7, #20]
	    uint32_t temp1, temp2;
		if (pGPIOHandle->pin_config.GPIO_PinMode <= GPIO_Mode_Analog)
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	795b      	ldrb	r3, [r3, #5]
 800052c:	2b03      	cmp	r3, #3
 800052e:	d81b      	bhi.n	8000568 <GPIO_Init+0x4c>
		{//non interrupt mode
		 temp = pGPIOHandle->pin_config.GPIO_PinMode<<(2*pGPIOHandle->pin_config.GPIO_PinNumber);
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	795b      	ldrb	r3, [r3, #5]
 8000534:	461a      	mov	r2, r3
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	791b      	ldrb	r3, [r3, #4]
 800053a:	005b      	lsls	r3, r3, #1
 800053c:	fa02 f303 	lsl.w	r3, r2, r3
 8000540:	617b      	str	r3, [r7, #20]
		 pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2*pGPIOHandle->pin_config.GPIO_PinNumber));
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	681a      	ldr	r2, [r3, #0]
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	791b      	ldrb	r3, [r3, #4]
 800054c:	005b      	lsls	r3, r3, #1
 800054e:	2103      	movs	r1, #3
 8000550:	fa01 f303 	lsl.w	r3, r1, r3
 8000554:	43db      	mvns	r3, r3
 8000556:	4619      	mov	r1, r3
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	400a      	ands	r2, r1
 800055e:	601a      	str	r2, [r3, #0]
		 pGPIOHandle->pGPIOx->MODER = temp;
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	697a      	ldr	r2, [r7, #20]
 8000566:	601a      	str	r2, [r3, #0]
		}
		if (pGPIOHandle->pin_config.GPIO_PinSpeed <= GPIO_SpeedControl_verHigh)
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	799b      	ldrb	r3, [r3, #6]
 800056c:	2b03      	cmp	r3, #3
 800056e:	d81b      	bhi.n	80005a8 <GPIO_Init+0x8c>
	    //configuring the speed
		{
		temp = pGPIOHandle->pin_config.GPIO_PinSpeed<<(2*pGPIOHandle->pin_config.GPIO_PinNumber);
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	799b      	ldrb	r3, [r3, #6]
 8000574:	461a      	mov	r2, r3
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	791b      	ldrb	r3, [r3, #4]
 800057a:	005b      	lsls	r3, r3, #1
 800057c:	fa02 f303 	lsl.w	r3, r2, r3
 8000580:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2*pGPIOHandle->pin_config.GPIO_PinNumber));
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	689a      	ldr	r2, [r3, #8]
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	005b      	lsls	r3, r3, #1
 800058e:	2103      	movs	r1, #3
 8000590:	fa01 f303 	lsl.w	r3, r1, r3
 8000594:	43db      	mvns	r3, r3
 8000596:	4619      	mov	r1, r3
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	400a      	ands	r2, r1
 800059e:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR = temp;
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	697a      	ldr	r2, [r7, #20]
 80005a6:	609a      	str	r2, [r3, #8]
		}

		if (pGPIOHandle->pin_config.GPIO_PinPuPdControl <= GPIO_PuPdControl_reserved)
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	79db      	ldrb	r3, [r3, #7]
 80005ac:	2b03      	cmp	r3, #3
 80005ae:	d81b      	bhi.n	80005e8 <GPIO_Init+0xcc>
	    // configuring the pullup pull down
		{
		temp = pGPIOHandle->pin_config.GPIO_PinPuPdControl<<(2*pGPIOHandle->pin_config.GPIO_PinNumber);
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	79db      	ldrb	r3, [r3, #7]
 80005b4:	461a      	mov	r2, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	791b      	ldrb	r3, [r3, #4]
 80005ba:	005b      	lsls	r3, r3, #1
 80005bc:	fa02 f303 	lsl.w	r3, r2, r3
 80005c0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2*pGPIOHandle->pin_config.GPIO_PinNumber));
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	68da      	ldr	r2, [r3, #12]
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	005b      	lsls	r3, r3, #1
 80005ce:	2103      	movs	r1, #3
 80005d0:	fa01 f303 	lsl.w	r3, r1, r3
 80005d4:	43db      	mvns	r3, r3
 80005d6:	4619      	mov	r1, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	400a      	ands	r2, r1
 80005de:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR = temp;
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	697a      	ldr	r2, [r7, #20]
 80005e6:	60da      	str	r2, [r3, #12]
		}

	//configuring the output type
		if (pGPIOHandle->pin_config.GPIO_PinOType <= GPIO_OType_openDrain)
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	7a1b      	ldrb	r3, [r3, #8]
 80005ec:	2b01      	cmp	r3, #1
 80005ee:	d819      	bhi.n	8000624 <GPIO_Init+0x108>
		{
		temp = pGPIOHandle->pin_config.GPIO_PinOType<<(pGPIOHandle->pin_config.GPIO_PinNumber);
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	7a1b      	ldrb	r3, [r3, #8]
 80005f4:	461a      	mov	r2, r3
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	791b      	ldrb	r3, [r3, #4]
 80005fa:	fa02 f303 	lsl.w	r3, r2, r3
 80005fe:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 <<(pGPIOHandle->pin_config.GPIO_PinNumber));
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	685a      	ldr	r2, [r3, #4]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	791b      	ldrb	r3, [r3, #4]
 800060a:	4619      	mov	r1, r3
 800060c:	2301      	movs	r3, #1
 800060e:	408b      	lsls	r3, r1
 8000610:	43db      	mvns	r3, r3
 8000612:	4619      	mov	r1, r3
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	400a      	ands	r2, r1
 800061a:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER = temp;
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	697a      	ldr	r2, [r7, #20]
 8000622:	605a      	str	r2, [r3, #4]
		}

	//configuring alternalte function

		if (pGPIOHandle->pin_config.GPIO_PinMode == GPIO_Mode_altFunc)
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	795b      	ldrb	r3, [r3, #5]
 8000628:	2b02      	cmp	r3, #2
 800062a:	d132      	bne.n	8000692 <GPIO_Init+0x176>
				{
					temp1 = pGPIOHandle->pin_config.GPIO_PinNumber/8;
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	791b      	ldrb	r3, [r3, #4]
 8000630:	08db      	lsrs	r3, r3, #3
 8000632:	b2db      	uxtb	r3, r3
 8000634:	613b      	str	r3, [r7, #16]
					temp2 = pGPIOHandle->pin_config.GPIO_PinNumber%8;
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	791b      	ldrb	r3, [r3, #4]
 800063a:	f003 0307 	and.w	r3, r3, #7
 800063e:	60fb      	str	r3, [r7, #12]
				    //temp = pGPIOHandle->pin_config.GPIO_PinAltFuction<<(temp2);
				    //pGPIOHandle->pGPIOx->AFR[temp1] = temp;
					pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2));
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	693a      	ldr	r2, [r7, #16]
 8000646:	3208      	adds	r2, #8
 8000648:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800064c:	68fb      	ldr	r3, [r7, #12]
 800064e:	009b      	lsls	r3, r3, #2
 8000650:	210f      	movs	r1, #15
 8000652:	fa01 f303 	lsl.w	r3, r1, r3
 8000656:	43db      	mvns	r3, r3
 8000658:	4619      	mov	r1, r3
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	4011      	ands	r1, r2
 8000660:	693a      	ldr	r2, [r7, #16]
 8000662:	3208      	adds	r2, #8
 8000664:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				    pGPIOHandle->pGPIOx->AFR[temp1] |=pGPIOHandle->pin_config.GPIO_PinAltFuction<<(4*temp2);
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	693a      	ldr	r2, [r7, #16]
 800066e:	3208      	adds	r2, #8
 8000670:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	7a5b      	ldrb	r3, [r3, #9]
 8000678:	4619      	mov	r1, r3
 800067a:	68fb      	ldr	r3, [r7, #12]
 800067c:	009b      	lsls	r3, r3, #2
 800067e:	fa01 f303 	lsl.w	r3, r1, r3
 8000682:	4619      	mov	r1, r3
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	4311      	orrs	r1, r2
 800068a:	693a      	ldr	r2, [r7, #16]
 800068c:	3208      	adds	r2, #8
 800068e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				}

}
 8000692:	bf00      	nop
 8000694:	371c      	adds	r7, #28
 8000696:	46bd      	mov	sp, r7
 8000698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800069c:	4770      	bx	lr

0800069e <GPIO_ReadFromInputPin>:

}

//read and write
uint8_t GPIO_ReadFromInputPin(Reg_def_t *GPIOx,uint8_t PINNUMBER)
{
 800069e:	b480      	push	{r7}
 80006a0:	b085      	sub	sp, #20
 80006a2:	af00      	add	r7, sp, #0
 80006a4:	6078      	str	r0, [r7, #4]
 80006a6:	460b      	mov	r3, r1
 80006a8:	70fb      	strb	r3, [r7, #3]
  uint8_t value;
  value = (uint8_t)(GPIOx->IDR>>PINNUMBER)*(0x00000001);
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	691a      	ldr	r2, [r3, #16]
 80006ae:	78fb      	ldrb	r3, [r7, #3]
 80006b0:	fa22 f303 	lsr.w	r3, r2, r3
 80006b4:	73fb      	strb	r3, [r7, #15]
  return value;
 80006b6:	7bfb      	ldrb	r3, [r7, #15]
}
 80006b8:	4618      	mov	r0, r3
 80006ba:	3714      	adds	r7, #20
 80006bc:	46bd      	mov	sp, r7
 80006be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006c2:	4770      	bx	lr

080006c4 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(Reg_def_t *pGPIOx,uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(Reg_def_t *pGPIOx,uint8_t PINNUMBER)
{
 80006c4:	b480      	push	{r7}
 80006c6:	b083      	sub	sp, #12
 80006c8:	af00      	add	r7, sp, #0
 80006ca:	6078      	str	r0, [r7, #4]
 80006cc:	460b      	mov	r3, r1
 80006ce:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1<<PINNUMBER);
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	695b      	ldr	r3, [r3, #20]
 80006d4:	78fa      	ldrb	r2, [r7, #3]
 80006d6:	2101      	movs	r1, #1
 80006d8:	fa01 f202 	lsl.w	r2, r1, r2
 80006dc:	405a      	eors	r2, r3
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	615a      	str	r2, [r3, #20]
}
 80006e2:	bf00      	nop
 80006e4:	370c      	adds	r7, #12
 80006e6:	46bd      	mov	sp, r7
 80006e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ec:	4770      	bx	lr
	...

080006f0 <__libc_init_array>:
 80006f0:	b570      	push	{r4, r5, r6, lr}
 80006f2:	4e0d      	ldr	r6, [pc, #52]	; (8000728 <__libc_init_array+0x38>)
 80006f4:	4c0d      	ldr	r4, [pc, #52]	; (800072c <__libc_init_array+0x3c>)
 80006f6:	1ba4      	subs	r4, r4, r6
 80006f8:	10a4      	asrs	r4, r4, #2
 80006fa:	2500      	movs	r5, #0
 80006fc:	42a5      	cmp	r5, r4
 80006fe:	d109      	bne.n	8000714 <__libc_init_array+0x24>
 8000700:	4e0b      	ldr	r6, [pc, #44]	; (8000730 <__libc_init_array+0x40>)
 8000702:	4c0c      	ldr	r4, [pc, #48]	; (8000734 <__libc_init_array+0x44>)
 8000704:	f000 f818 	bl	8000738 <_init>
 8000708:	1ba4      	subs	r4, r4, r6
 800070a:	10a4      	asrs	r4, r4, #2
 800070c:	2500      	movs	r5, #0
 800070e:	42a5      	cmp	r5, r4
 8000710:	d105      	bne.n	800071e <__libc_init_array+0x2e>
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000718:	4798      	blx	r3
 800071a:	3501      	adds	r5, #1
 800071c:	e7ee      	b.n	80006fc <__libc_init_array+0xc>
 800071e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000722:	4798      	blx	r3
 8000724:	3501      	adds	r5, #1
 8000726:	e7f2      	b.n	800070e <__libc_init_array+0x1e>
 8000728:	08000750 	.word	0x08000750
 800072c:	08000750 	.word	0x08000750
 8000730:	08000750 	.word	0x08000750
 8000734:	08000754 	.word	0x08000754

08000738 <_init>:
 8000738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800073a:	bf00      	nop
 800073c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800073e:	bc08      	pop	{r3}
 8000740:	469e      	mov	lr, r3
 8000742:	4770      	bx	lr

08000744 <_fini>:
 8000744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000746:	bf00      	nop
 8000748:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800074a:	bc08      	pop	{r3}
 800074c:	469e      	mov	lr, r3
 800074e:	4770      	bx	lr
